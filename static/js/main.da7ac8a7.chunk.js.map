{"version":3,"sources":["types/Select.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/FilterSelect/FilterSelect.tsx","components/TodoFilterBlock/TodoFilterBlock.tsx","api.ts","utils/helpers.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","TodoItem","todo","todoId","onSelectedIdChange","id","completed","title","isSelected","className","cn","type","onClick","TodoList","React","memo","props","todos","onModalIdChange","map","FilterSelect","filter","onFilterChange","value","onChange","ALL","ACTIVE","COMPLETED","TodoFilterBlock","query","onQueryChange","onInputReset","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","getUserFromServer","userSetter","a","userFromServer","name","trim","Error","loadingTodos","todosSetter","loadingSetter","hasErrorSetter","todosFromServer","Loader","TodoModal","onClose","useState","user","setUser","href","email","App","setTodos","modalTodoId","setModalTodoId","setFilter","setQuery","appliedQuery","setAppliedQuery","isLoading","setIsLoading","hasLoadingError","setHasLoadingError","useEffect","visibleTodos","useMemo","select","lowerAppliedQuery","toLowerCase","filteredTodos","includes","filterTodos","modalTodo","find","applyQuery","useCallback","debounce","handleModalIdChange","handleCloseClick","handleFilterChange","event","target","handleQueryChange","handleInputReset","showList","length","noTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da7ac8a7.chunk.js","sourcesContent":["export enum Select {\n  ALL = 'all',\n  COMPLETED = 'active',\n  ACTIVE = 'completed',\n}\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo,\n  todoId: number,\n  onSelectedIdChange: (todoId: number) => void,\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  todoId,\n  onSelectedIdChange,\n}) => {\n  const {\n    id,\n    completed,\n    title,\n  } = todo;\n\n  const isSelected = todoId === id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': isSelected,\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelectedIdChange(id)}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye': !isSelected,\n              'fa-eye-slash': isSelected,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  todoId: number;\n  onModalIdChange: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = React.memo((props) => {\n  const {\n    todos,\n    todoId,\n    onModalIdChange,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            todoId={todoId}\n            onSelectedIdChange={onModalIdChange}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { Select } from '../../types/Select';\n\ninterface Props {\n  filter: Select;\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport const FilterSelect: React.FC<Props> = ({ filter, onFilterChange }) => (\n  <p className=\"control\">\n    <span className=\"select\">\n      <select\n        data-cy=\"statusSelect\"\n        value={filter}\n        onChange={onFilterChange}\n      >\n        <option value={Select.ALL}>All</option>\n        <option value={Select.ACTIVE}>Active</option>\n        <option value={Select.COMPLETED}>Completed</option>\n      </select>\n    </span>\n  </p>\n);\n","import React from 'react';\nimport { Select } from '../../types/Select';\nimport { FilterSelect } from '../FilterSelect';\n\ntype Props = {\n  filter: Select;\n  query: string;\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onInputReset: () => void;\n};\n\nexport const TodoFilterBlock:React.FC<Props> = React.memo(({\n  filter,\n  onFilterChange,\n  query,\n  onQueryChange,\n  onInputReset,\n}) => (\n  <form className=\"field has-addons\">\n    <FilterSelect filter={filter} onFilterChange={onFilterChange} />\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onQueryChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            aria-label=\"clearSearchButton\"\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onInputReset}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { getTodos, getUser } from '../api';\nimport { Select } from '../types/Select';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\nexport const filterTodos = (\n  select: Select,\n  query: string,\n  todos: Todo[],\n): Todo[] => {\n  const lowerAppliedQuery = query.toLowerCase();\n\n  let filteredTodos = todos;\n\n  if (select !== Select.ALL) {\n    filteredTodos = filteredTodos.filter(todo => {\n      switch (select) {\n        case Select.COMPLETED:\n          return todo.completed;\n        case Select.ACTIVE:\n          return !todo.completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(todo => (\n      todo.title.toLowerCase().includes(lowerAppliedQuery)));\n  }\n\n  return filteredTodos;\n};\n\nexport const getTodoById = (id: number, todoArr: Todo[]): Todo | null => (\n  todoArr.find(todo => todo.id === id) || null\n);\n\nexport const getUserFromServer = async (\n  userId: number,\n  userSetter: React.Dispatch<React.SetStateAction<User | null>>,\n) => {\n  try {\n    const userFromServer = await getUser(userId);\n\n    if (userFromServer.name.trim()) {\n      userSetter(userFromServer);\n    }\n  } catch (error) {\n    throw Error('Unable to get user from server. Try again later');\n  }\n};\n\nexport const loadingTodos = async (\n  todosSetter: React.Dispatch<React.SetStateAction<Todo[]>>,\n  loadingSetter: React.Dispatch<React.SetStateAction<boolean>>,\n  hasErrorSetter: React.Dispatch<React.SetStateAction<boolean>>,\n) => {\n  try {\n    loadingSetter(true);\n    const todosFromServer = await getTodos();\n\n    todosSetter(todosFromServer);\n  } catch {\n    hasErrorSetter(true);\n    throw Error('Unable to load todos from server. Try again later');\n  } finally {\n    loadingSetter(false);\n  }\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable no-console */\nimport cn from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUserFromServer } from '../../utils/helpers';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  getUserFromServer(userId, setUser);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              aria-label=\"modal-close\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable no-console */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport debounce from 'lodash/debounce';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilterBlock } from './components/TodoFilterBlock';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Select } from './types/Select';\nimport { filterTodos, getTodoById, loadingTodos } from './utils/helpers';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [modalTodoId, setModalTodoId] = useState(0);\n  const [filter, setFilter] = useState<Select>(Select.ALL);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  useEffect(() => {\n    loadingTodos(setTodos, setIsLoading, setHasLoadingError);\n  }, []);\n\n  const visibleTodos = useMemo(() => (\n    filterTodos(filter, appliedQuery, todos)\n  ), [appliedQuery, filter, todos]);\n\n  const modalTodo = useMemo(() => (\n    getTodoById(modalTodoId, todos)\n  ), [modalTodoId]);\n\n  const applyQuery = useCallback(debounce((value) => {\n    setIsLoading(false);\n\n    return setAppliedQuery(value);\n  }, 700), []);\n\n  const handleModalIdChange = useCallback((todoId) => {\n    setModalTodoId(todoId);\n  }, []);\n\n  const handleCloseClick = useCallback(() => {\n    setModalTodoId(0);\n  }, []);\n\n  const handleFilterChange = useCallback((event) => {\n    setFilter(event.target.value);\n  }, []);\n\n  const handleQueryChange = useCallback((event) => {\n    setIsLoading(true);\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  }, []);\n\n  const handleInputReset = useCallback(() => {\n    setQuery('');\n    setAppliedQuery('');\n  }, []);\n\n  const showList = !!visibleTodos.length && !isLoading;\n  const noTodos = !visibleTodos.length && !isLoading;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilterBlock\n                filter={filter}\n                onFilterChange={handleFilterChange}\n                query={query}\n                onQueryChange={handleQueryChange}\n                onInputReset={handleInputReset}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {showList && (\n                <TodoList\n                  todos={visibleTodos}\n                  onModalIdChange={handleModalIdChange}\n                  todoId={modalTodoId}\n                />\n              )}\n\n              {noTodos && (\n                <p className=\"notification\">No suitable todos</p>\n              )}\n\n              {hasLoadingError && (\n                <p className=\"notification\">Can`t load data from server</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {modalTodo && <TodoModal todo={modalTodo} onClose={handleCloseClick} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}