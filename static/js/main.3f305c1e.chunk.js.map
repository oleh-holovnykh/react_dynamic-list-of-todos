{"version":3,"sources":["types/Select.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","TodoList","props","todos","todoId","onSelectedIdChange","className","map","id","title","completed","cn","type","onClick","TodoFilter","React","memo","status","onSelectChange","query","onQueryChange","onInputReset","value","onChange","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","todo","onClose","useState","user","setUser","handleUserLoading","useCallback","loadingUser","a","userFromServer","name","trim","console","log","useEffect","href","email","App","setTodos","selectedTodoId","setSelectedTodoId","select","setSelect","setQuery","appliedQuery","setAppliedQuery","handleTodosLoading","loadingTodos","todosFromServer","filter","visibleTodos","useMemo","s","q","t","lowerAppliedQuery","toLowerCase","td","includes","filterTodos","debounce","handleSelectedIdChange","handleCloseClick","handleSelectChange","event","target","handleQueryChange","handleInputReset","selectedTodo","find","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f305c1e.chunk.js","sourcesContent":["export enum Select {\n  ALL = 'all',\n  COMPLETED = 'active',\n  ACTIVE = 'completed',\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todoId: number;\n  onSelectedIdChange: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    todoId,\n    onSelectedIdChange,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({ id, title, completed }) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectedIdChange(id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': todoId !== id,\n                    'fa-eye-slash': todoId === id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Select } from '../../types/Select';\n\ntype Props = {\n  status: Select;\n  query: string;\n  onSelectChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onInputReset: () => void;\n};\n\nexport const TodoFilter:React.FC<Props> = React.memo(({\n  status,\n  onSelectChange,\n  query,\n  onQueryChange,\n  onInputReset,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={onSelectChange}\n        >\n          <option value={Select.ALL}>All</option>\n          <option value={Select.ACTIVE}>Active</option>\n          <option value={Select.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onQueryChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onInputReset}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable no-console */\nimport cn from 'classnames';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleUserLoading = useCallback(() => {\n    const loadingUser = async () => {\n      try {\n        const userFromServer = await getUser(userId);\n\n        if (userFromServer.name.trim()) {\n          setUser(userFromServer);\n        }\n      } catch (error) {\n        console.log('error catched');\n      }\n    };\n\n    loadingUser();\n  }, []);\n\n  useEffect(handleUserLoading, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable no-console */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport debounce from 'lodash/debounce';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Select } from './types/Select';\n\nexport const filterTodos = (s: Select, q: string, t: Todo[]): Todo[] => {\n  const lowerAppliedQuery = q.toLowerCase();\n\n  return t\n    .filter(td => {\n      switch (s) {\n        case Select.COMPLETED:\n          return td.completed;\n        case Select.ACTIVE:\n          return !td.completed;\n        default:\n          return true;\n      }\n    })\n    .filter(td => td.title.toLowerCase().includes(lowerAppliedQuery));\n};\n\nexport const getTodoById = (id: number, arr: Todo[]): Todo | null => (\n  arr.find(todo => todo.id === id) || null\n);\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [select, setSelect] = useState<Select>(Select.ALL);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const handleTodosLoading = useCallback(() => {\n    const loadingTodos = async () => {\n      try {\n        let todosFromServer = await getTodos();\n\n        todosFromServer = todosFromServer.filter(todo => {\n          const {\n            id,\n            title,\n            completed,\n            userId,\n          } = todo;\n\n          return (id > 0) && (title.trim()) && (typeof completed === 'boolean') && (userId > 0)\n            ? true\n            : console.log('filtered some todo from server');\n        });\n        setTodos(todosFromServer);\n      } catch (error) {\n        console.log('you catched some error');\n      }\n    };\n\n    loadingTodos();\n  }, []);\n\n  useEffect(handleTodosLoading, []);\n\n  const visibleTodos = useMemo(() => (\n    filterTodos(select, appliedQuery, todos)\n  ), [appliedQuery, select, todos]);\n\n  useEffect(debounce(() => setAppliedQuery(query), 700), [query]);\n\n  const handleSelectedIdChange = useCallback((todoId) => {\n    setSelectedTodoId(todoId);\n  }, []);\n\n  const handleCloseClick = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  const handleSelectChange = useCallback((event) => {\n    setSelect(event.target.value);\n  }, []);\n\n  const handleQueryChange = useCallback((event) => {\n    setQuery(event.target.value);\n  }, []);\n\n  const handleInputReset = useCallback(() => setQuery(''), []);\n\n  const selectedTodo = useMemo(() => (\n    getTodoById(selectedTodoId, todos)\n  ), [selectedTodoId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={select}\n                onSelectChange={handleSelectChange}\n                query={query}\n                onQueryChange={handleQueryChange}\n                onInputReset={handleInputReset}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelectedIdChange={handleSelectedIdChange}\n                    todoId={selectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && <TodoModal todo={selectedTodo} onClose={handleCloseClick} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}